'.source.js':
  'CE':
    'prefix': 'cel'
    'body': 'class ${1:className} extends HTMLElement {\n\t$3\n}\nwindow.customElements.define(\'${2:elementName}\', ${1:className});'
  'Ananymous CE':
    'prefix': 'acel'
    'body': 'window.customElements.define(\'${1:elementName}\', class extends HTMLElement {\n\t$2\n});'
  'CE reactions':
    'prefix': 'celr'
    'body': 'constructor() {\n\tsuper();\n}\n\nconnectedCallback() {\n\t\n}\n\ndisconnectedCallback() {\n\t\n}\n'
  'CE oberserved Attributes':
    'prefix': 'celoa'
    'body': 'static get observedAttributes() {\n\treturn [\n\t\n];\n}'
  'CE oberserved attributes reaction':
    'prefix': 'celoar'
    'body': 'attributeChangedCallback(name, oldValue, newValue) {\n\t\n}'
  'CE reflected disabled attribute':
    'prefix': 'celad'
    'body': 'get disabled() {\n\treturn this.hasAttribute(\'disabled\');\n}\n\nset disabled(val) {\n\tif (val) {\n\t\tthis.setAttribute(\'disabled\', \'\');\n\t} else {\n\t\tthis.removeAttribute(\'disabled\');\n\t}\n}\n'
  'CE Template':
    'prefix': 'celT'
    'body': '<template id="${1:className}">\n\t\n</template>\n'
